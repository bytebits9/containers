version: '3.8'

networks:
  backend:
    driver: ${DRIVER_NETWORKS}
  frontend:
    driver: ${DRIVER_NETWORKS}

volumes:
  postgres:
    driver: ${DRIVER_VOLUMES}
  redis:
    driver: ${DRIVER_VOLUMES}
  docker-in-docker:
    driver: ${DRIVER_VOLUMES}

services:
  php-fpm:
    build:
      context: ../images/php-fpm
      args:
        - PHP_VERSION=${PHP_VERSION}
    volumes:
      - ${APP_HOST_PATH}:${APP_CONTAINER_PATH}${APP_CONTAINER_FLAG}
      - ${PHP_HOST_CONF_PATH}/php-fpm/www.conf:/usr/local/etc/php/php-fpm.d/www.conf${PHP_CONTAINER_FLAG}
      - ${PHP_HOST_LOG_PATH}:/var/log${PHP_CONTAINER_FLAG}
      - docker-in-docker:/certs/client
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_HOST=tcp://docker-in-docker:2376
      - DOCKER_TLS_VERIFY=1
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_CERT_PATH=/certs/client
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - backend
    links:
      - docker-in-docker
  nginx:
    image: nuldark/nginx:${NGINX_VERSION}
    volumes:
      - ${APP_HOST_PATH}:${APP_CONTAINER_PATH}${APP_CONTAINER_FLAG}
      - ${NGINX_HOST_CONF_PATH}/nginx.conf:/etc/nginx/nginx.conf${NGINX_CONTAINER_FLAG}
      - ${NGINX_HOST_CONF_PATH}/sites-available:/etc/nginx/sites-available${NGINX_CONTAINER_FLAG}
      - ${NGINX_HOST_CONF_PATH}/ssl:/etc/nginx/ssl${NGINX_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx${NGINX_CONTAINER_FLAG}
    ports:
      - "${NGINX_HOST_PORT_HTTP}:80"
      - "${NGINX_HOST_PORT_HTTPS}:433"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

  redis:
    image: nuldark/redis:${REDIS_VERSION}
    command: --requirepass ${REDIS_PASSWORD}
    volumes:
      - ${REDIS_HOST_CONF_PATH}:/usr/local/etc/redis/redis.conf${REDIS_CONTAINER_FLAG}
      - ${REDIS_HOST_DATA_PATH}:/data${REDIS_CONTAINER_FLAG}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

  postgres:
    image: postgres:${POSTGRES_VERSION}
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-app}
      - POSTGRES_USER=${POSTGRES_USER:-app}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    volumes:
      - ${POSTGRES_HOST_CONF_PATH}/postgresql.conf:/var/lib/postgresql/data/postgresql.conf${POSTGRES_CONTAINER_FLAG}
      - ${POSTGRES_HOST_DATA_PATH}:/var/lib/postgresql/data${POSTGRES_CONTAINER_FLAG}
      - ${POSTGRES_HOST_LOG_PATH}:/var/log/postgresql${POSTGRES_CONTAINER_FLAG}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4:${PGADMIN_VERSION}
    user: "root"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=${PGADMIN_CONFIG_SERVER_MODE}
    volumes:
      - ${PGADMIN_HOST_LOG_PATH}:/var/log/pgadmin${PGADMIN_CONTAINER_FLAG}
      - ${PGADMIN_HOST_DATA_PATH}:/var/lib/pgadmin${PGADMIN_CONTAINER_FLAG}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres
    networks:
      - frontend
      - backend

  mailhog:
    image: mailhog/mailhog:${MAILHOG_VERSION}
    ports:
      - "${MAILHOG_SMTP_PORT}:1025"
      - "${MAILHOG_HTTP_PORT}:8025"
    networks:
      - frontend
      - backend

  docker-in-docker:
    image: docker:24.0-dind
    environment:
      DOCKER_TLS_SAN: DNS:docker-in-docker
    privileged: true
    volumes:
      - ${APP_HOST_PATH}:${APP_CONTAINER_PATH}${APP_CONTAINER_FLAG}
      - docker-in-docker:/certs/client
    expose:
      - 2365
    networks:
      - backend
